# Generated by Django 5.2.1 on 2025-05-17 07:54

import apps.peoples.models
import apps.reports.models
import django.contrib.postgres.fields
import django.core.serializers.json
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('onboarding', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratePDF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('document_type', models.CharField(choices=[('PF', 'PF'), ('ESIC', 'ESIC'), ('PAYROLL', 'PAYROLL')], max_length=60, null=True, verbose_name='Document Type')),
                ('company', models.CharField(choices=[('SPS', 'SPS'), ('SFS', 'SFS'), ('TARGET', 'TARGET')], max_length=60, null=True, verbose_name='Company')),
                ('additional_filter', models.CharField(choices=[('CUSTOMER', 'Customer'), ('SITE', 'Site')], max_length=60, verbose_name='Additional Filter')),
                ('customer', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('site', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('period_from', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('type_of_form', models.CharField(choices=[('NORMAL FORM', 'NORMAL FORM'), ('FORM 16', 'FORM 16')], max_length=60, null=True, verbose_name='Type Of Form')),
                ('cuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_cusers', to=settings.AUTH_USER_MODEL)),
                ('muser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_musers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'generatepdf',
                'ordering': ['mdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=apps.reports.models.now)),
                ('export_type', models.CharField(default='DOWNLOAD', max_length=55)),
                ('report_name', models.CharField(max_length=100)),
                ('params', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('cdtz', models.DateTimeField(default=apps.reports.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.reports.models.now, verbose_name='mdtz')),
                ('has_data', models.BooleanField(default=True, verbose_name='Has Data in Report')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('cc_mails', models.TextField(max_length=250, null=True)),
                ('to_mails', models.TextField(max_length=250, null=True)),
                ('email_body', models.TextField(max_length=500, null=True)),
                ('traceback', models.TextField(null=True)),
                ('bu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='onboarding.bt')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='rh_clients', to='onboarding.bt')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='')),
            ],
            options={
                'db_table': 'report_history',
            },
        ),
        migrations.CreateModel(
            name='ScheduleReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('report_type', models.CharField(choices=[('', 'Select Report'), ('TASKSUMMARY', 'Task Summary'), ('TOURSUMMARY', 'Tour Summary'), ('LISTOFTASKS', 'List of Tasks'), ('LISTOFTOURS', 'List of Internal Tours'), ('PPMSUMMARY', 'PPM Summary'), ('LISTOFTICKETS', 'List of Tickets'), ('WORKORDERLIST', 'Work Order List'), ('SITEVISITREPORT', 'Site Visit Report'), ('SITEREPORT', 'Site Report'), ('PeopleQR', 'People-QR'), ('ASSETQR', 'Asset-QR'), ('CHECKPOINTQR', 'Checkpoint-QR'), ('ASSETWISETASKSTATUS', 'Assetwise Task Status'), ('DetailedTourSummary', 'Detailed Tour Summary'), ('STATICDETAILEDTOURSUMMARY', 'Static Detailed Tour Summary'), ('DYNAMICDETAILEDTOURSUMMARY', 'Dynamic Detailed Tour Summary'), ('DYNAMICTOURDETAILS', 'Dynamic Tour Details'), ('STATICTOURDETAILS', 'Static Tour Details'), ('RP_SITEVISITREPORT', 'RP Site Visit Report'), ('LOGSHEET', 'Log Sheet'), ('PEOPLEATTENDANCESUMMARY', 'People Attendance Summary')], max_length=50, verbose_name='Report Type')),
                ('filename', models.CharField(max_length=200, null=True)),
                ('report_name', models.CharField(max_length=55, verbose_name='Report Name')),
                ('workingdays', models.CharField(blank=True, choices=[('5', 'Monday - Friday'), ('6', 'Monday - Saturday')], max_length=1, null=True, verbose_name='Working Days')),
                ('cron', models.CharField(default='* * * * *', max_length=50, verbose_name='Scheduler')),
                ('report_sendtime', models.TimeField(verbose_name='Send Time')),
                ('cc', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=90, null=True), blank=True, null=True, size=None, verbose_name='Email-CC')),
                ('to_addr', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=90, null=True), blank=True, null=True, size=None, verbose_name='Email=TO')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('crontype', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cron Type')),
                ('fromdatetime', models.DateTimeField(null=True, verbose_name='Last Generated On')),
                ('uptodatetime', models.DateTimeField(null=True, verbose_name='Next Scheduled On')),
                ('lastgeneratedon', models.DateTimeField(null=True, verbose_name='Last Generated On')),
                ('report_params', models.JSONField(blank=True, default=apps.reports.models.report_params_json, null=True)),
                ('bu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='schd_sites', to='onboarding.bt')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='schd_clients', to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_cusers', to=settings.AUTH_USER_MODEL)),
                ('muser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_musers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'schedule_report',
                'ordering': ['mdtz'],
                'abstract': False,
                'constraints': [models.UniqueConstraint(fields=('cron', 'report_type', 'bu', 'report_params'), name='cron_report_type_report_params_uk'), models.UniqueConstraint(fields=('cron', 'report_type', 'bu', 'workingdays', 'report_params'), name='cron_report_type_workindays_report_params_uk')],
            },
        ),
    ]
