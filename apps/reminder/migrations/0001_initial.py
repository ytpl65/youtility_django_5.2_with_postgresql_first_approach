# Generated by Django 5.2.1 on 2025-05-17 07:54

import apps.peoples.models
import apps.reminder.managers
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('activity', '0002_initial'),
        ('onboarding', '0001_initial'),
        ('peoples', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('priority', models.CharField(choices=[('HIGH', 'High'), ('LOW', 'Low'), ('MEDIU', 'Medium')], max_length=50, verbose_name='Priority')),
                ('reminderdate', models.DateTimeField(null=True, verbose_name='Reminder Date')),
                ('reminderin', models.CharField(choices=[('NONE', 'None'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('BIMONTHLY', 'Bimonthly'), ('QUARTERLY', 'Quarterly'), ('HALFYEARLY', 'Half Yearly'), ('YEARLY', 'Yearly'), ('FORTNIGHTLY', 'Fort Nightly')], max_length=20, verbose_name='Reminder In')),
                ('reminderbefore', models.IntegerField(verbose_name='Reminder Before')),
                ('plandatetime', models.DateTimeField(null=True, verbose_name='Plan Datetime')),
                ('mailids', models.TextField(max_length=500, verbose_name='Mail Ids')),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'FAILED')], max_length=50, verbose_name='Status')),
                ('asset', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='activity.asset', verbose_name='Asset')),
                ('bu', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='onboarding.bt', verbose_name='Site')),
                ('cuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_cusers', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='peoples.pgroup', verbose_name='Group')),
                ('job', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='activity.job', verbose_name='Job')),
                ('jobneed', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='activity.jobneed', verbose_name='Jobneed')),
                ('muser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='%(class)s_musers', to=settings.AUTH_USER_MODEL)),
                ('people', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='People')),
                ('qset', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='activity.questionset', verbose_name='Question Set')),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'db_table': 'reminder',
                'ordering': ['mdtz'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.reminder.managers.ReminderManager()),
            ],
        ),
    ]
